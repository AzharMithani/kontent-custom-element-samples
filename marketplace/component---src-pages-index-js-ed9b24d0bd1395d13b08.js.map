{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/bio.js","webpack:///./src/components/layout.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","siteDescription","description","elements","allElementsJson","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","keywords","map","_ref","node","key","id","href","readmeUrl","style","marginBottom","rhythm","src","thumbnailUrl","alt","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","header p","color","fontStyle","googleFonts","typography","Typography","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","object","StaticQueryContext","createContext","StaticQuery","react_default","Consumer","staticQueryData","query","children","func","bioQuery","Bio","gatsby_browser_entry_StaticQuery","_data$site$siteMetada","social","display","marginTop","gatsby_image_default","fixed","avatar","childImageSharp","marginRight","minWidth","borderRadius","imgStyle","twitter","_4007731267","Layout","header","_this$props","gatsby_link_default","textDecoration","to","fontFamily","marginLeft","maxWidth","padding","bio","Date","getFullYear"],"mappings":"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","file":"component---src-pages-index-js-ed9b24d0bd1395d13b08.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { rhythm } from '../utils/typography';\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const siteDescription = data.site.siteMetadata.description;\n    const elements = data.allElementsJson.edges;\n\n    return (\n      <Layout\n        location={this.props.location}\n        title={siteTitle}\n        description={siteDescription}\n      >\n        <SEO\n          title=\"Custom element list\"\n          keywords={[\n            `Kentico Cloud`,\n            `caas`,\n            `javascript`,\n            `extensions`,\n            `custom elements`,\n          ]}\n        />\n        <h2>Marketplace</h2>\n        {elements.map(({ node }) => {\n          return (\n            <div key={node.id}>\n              <a href={node.readmeUrl}>\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  {node.title}\n                </h3>\n              </a>\n              <p>{node.description}</p>\n              <img\n                src={node.thumbnailUrl}\n                alt={`${node.title} custom element`}\n              />\n            </div>\n          );\n        })}\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n\n    allElementsJson(sort: {fields: title}) {\n      edges {\n        node {\n          id\n          title\n          description\n          thumbnailUrl\n          readmeUrl\n        }\n      }\n    }\n  }\n`;\n","import Typography from 'typography';\nimport Wordpress2016 from 'typography-theme-wordpress-2016';\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n    'header p': {\n      color: `grey`,\n      fontStyle: `italic`,\n    }\n  };\n};\n\ndelete Wordpress2016.googleFonts;\n\nconst typography = new Typography(Wordpress2016);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport { rhythm } from '../utils/typography';\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata;\n        return (\n          <div\n            style={{\n              display: `flex`,\n              marginTop: rhythm(2.5),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <p>\n              Written by <strong>{author}</strong>.\n              <br />\n              <a href={`https://twitter.com/${social.twitter}`}>\n                ...You should follow him on Twitter\n              </a>\n            </p>\n          </div>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Bio from './bio';\n\nimport { rhythm, scale } from '../utils/typography';\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, description, children } = this.props;\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header;\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      );\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      );\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>\n          {header}\n          <p>{description}</p>\n        </header>\n\n        <main>{children}</main>\n        <footer>\n          <Bio />\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          {` `}\n          using\n          {` `}\n          <a href=\"https://www.gatsbyjs.org/starters/gatsbyjs/gatsby-starter-blog/\">\n            Gatsby Starter Blog\n          </a>\n          {` `}\n          by\n          {` `}\n          <a href=\"https://www.twitter.com/kylemathews\">Kyle Mathews</a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n"],"sourceRoot":""}